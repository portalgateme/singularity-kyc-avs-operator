export default [
  {
    type: "constructor",
    inputs: [
      { name: "_avsDirectory", type: "address", internalType: "address" },
      { name: "_stakeRegistry", type: "address", internalType: "address" },
      { name: "_rewardsCoordinator", type: "address", internalType: "address" },
      { name: "_delegationManager", type: "address", internalType: "address" },
      { name: "_allocationManager", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addPendingAdmin",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "allocationManager",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "avsDirectory",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "createAVSRewardsSubmission",
    inputs: [
      {
        name: "rewardsSubmissions",
        type: "tuple[]",
        internalType: "struct IRewardsCoordinatorTypes.RewardsSubmission[]",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType:
              "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              { name: "multiplier", type: "uint96", internalType: "uint96" },
            ],
          },
          { name: "token", type: "address", internalType: "contract IERC20" },
          { name: "amount", type: "uint256", internalType: "uint256" },
          { name: "startTimestamp", type: "uint32", internalType: "uint32" },
          { name: "duration", type: "uint32", internalType: "uint32" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createKycTask",
    inputs: [{ name: "userAddress", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createOperatorDirectedAVSRewardsSubmission",
    inputs: [
      {
        name: "operatorDirectedRewardsSubmissions",
        type: "tuple[]",
        internalType:
          "struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission[]",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType:
              "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              { name: "multiplier", type: "uint96", internalType: "uint96" },
            ],
          },
          { name: "token", type: "address", internalType: "contract IERC20" },
          {
            name: "operatorRewards",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinatorTypes.OperatorReward[]",
            components: [
              { name: "operator", type: "address", internalType: "address" },
              { name: "amount", type: "uint256", internalType: "uint256" },
            ],
          },
          { name: "startTimestamp", type: "uint32", internalType: "uint32" },
          { name: "duration", type: "uint32", internalType: "uint32" },
          { name: "description", type: "string", internalType: "string" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "deregisterOperatorFromAVS",
    inputs: [{ name: "operator", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "deregisterOperatorFromOperatorSets",
    inputs: [
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "uint32[]", internalType: "uint32[]" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getOperatorResponse",
    inputs: [
      { name: "taskId", type: "uint256", internalType: "uint256" },
      { name: "operator", type: "address", internalType: "address" },
    ],
    outputs: [
      { name: "", type: "uint8", internalType: "enum KycAVS.ResponseState" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOperatorRestakedStrategies",
    inputs: [{ name: "_operator", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRestakeableStrategies",
    inputs: [],
    outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTaskDetails",
    inputs: [{ name: "taskId", type: "uint256", internalType: "uint256" }],
    outputs: [
      { name: "userAddress", type: "address", internalType: "address" },
      { name: "taskCreatedBlock", type: "uint32", internalType: "uint32" },
      { name: "isCompleted", type: "bool", internalType: "bool" },
      { name: "approvalWeight", type: "uint256", internalType: "uint256" },
      { name: "rejectionWeight", type: "uint256", internalType: "uint256" },
      {
        name: "totalWeightAtCreation",
        type: "uint256",
        internalType: "uint256",
      },
      { name: "finalResult", type: "bool", internalType: "bool" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTaskDetailsForOperatorListener",
    inputs: [
      { name: "taskId", type: "uint256", internalType: "uint256" },
      { name: "operator", type: "address", internalType: "address" },
    ],
    outputs: [
      { name: "isCompleted", type: "bool", internalType: "bool" },
      { name: "isAnswered", type: "bool", internalType: "bool" },
      { name: "userAddress", type: "address", internalType: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getWalletKycStatus",
    inputs: [{ name: "wallet", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hasCompletedKyc",
    inputs: [{ name: "user", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      { name: "initialOwner", type: "address", internalType: "address" },
      { name: "_rewardsInitiator", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isTaskCompleted",
    inputs: [{ name: "taskId", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "operatorRegisteredAtBlock",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "quorumThresholdBps",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerOperatorToAVS",
    inputs: [
      { name: "operator", type: "address", internalType: "address" },
      {
        name: "operatorSignature",
        type: "tuple",
        internalType: "struct ISignatureUtils.SignatureWithSaltAndExpiry",
        components: [
          { name: "signature", type: "bytes", internalType: "bytes" },
          { name: "salt", type: "bytes32", internalType: "bytes32" },
          { name: "expiry", type: "uint256", internalType: "uint256" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeAdmin",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeAppointee",
    inputs: [
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "bytes4", internalType: "bytes4" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removePendingAdmin",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "rewardsInitiator",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setAVSRegistrar",
    inputs: [
      {
        name: "registrar",
        type: "address",
        internalType: "contract IAVSRegistrar",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setAppointee",
    inputs: [
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "bytes4", internalType: "bytes4" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setClaimerFor",
    inputs: [{ name: "claimer", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setOperatorRegisteredAtBlock",
    inputs: [
      { name: "operator", type: "address", internalType: "address" },
      { name: "blockNumber", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setRewardsInitiator",
    inputs: [
      { name: "newRewardsInitiator", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "stakeRegistry",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "submitResponse",
    inputs: [
      { name: "taskId", type: "uint256", internalType: "uint256" },
      { name: "kycApproved", type: "bool", internalType: "bool" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "tasks",
    inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    outputs: [
      { name: "userAddress", type: "address", internalType: "address" },
      { name: "taskCreatedBlock", type: "uint32", internalType: "uint32" },
      { name: "isCompleted", type: "bool", internalType: "bool" },
      { name: "approvalWeight", type: "uint256", internalType: "uint256" },
      { name: "rejectionWeight", type: "uint256", internalType: "uint256" },
      {
        name: "totalWeightAtCreation",
        type: "uint256",
        internalType: "uint256",
      },
      { name: "finalResult", type: "bool", internalType: "bool" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateAVSMetadataURI",
    inputs: [
      { name: "_newMetadataURI", type: "string", internalType: "string" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateQuorumThreshold",
    inputs: [
      { name: "newThresholdBps", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "userKycStatus",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "AVSMetadataURIUpdated",
    inputs: [
      {
        name: "newMetadataURI",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      { name: "version", type: "uint8", indexed: false, internalType: "uint8" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "KycStatusUpdated",
    inputs: [
      { name: "user", type: "address", indexed: true, internalType: "address" },
      { name: "hasKyc", type: "bool", indexed: false, internalType: "bool" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OperatorDeregisteredAVS",
    inputs: [
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OperatorRegisteredAVS",
    inputs: [
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "QuorumReached",
    inputs: [
      {
        name: "taskId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "finalResult",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
      {
        name: "approvalWeight",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "rejectionWeight",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "QuorumThresholdUpdated",
    inputs: [
      {
        name: "newThresholdBps",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ResponseSubmitted",
    inputs: [
      {
        name: "taskId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "kycApproved",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
      {
        name: "operatorWeigh",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardsInitiatorUpdated",
    inputs: [
      {
        name: "prevRewardsInitiator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newRewardsInitiator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TaskCreated",
    inputs: [
      {
        name: "taskId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "userAddress",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "taskCreatedBlock",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
      {
        name: "totalWeightAtCreation",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  { type: "error", name: "DelayPeriodNotPassed", inputs: [] },
  { type: "error", name: "DivisionByZeroInQuorum", inputs: [] },
  { type: "error", name: "InvalidUserAddress", inputs: [] },
  { type: "error", name: "OnlyRegistryCoordinator", inputs: [] },
  { type: "error", name: "OnlyRewardsInitiator", inputs: [] },
  { type: "error", name: "OnlyStakeRegistry", inputs: [] },
  { type: "error", name: "OperatorAlreadyResponded", inputs: [] },
  { type: "error", name: "OperatorNotRegisteredInAVS", inputs: [] },
  { type: "error", name: "OperatorStakeTooLow", inputs: [] },
  { type: "error", name: "QuorumThresholdInvalid", inputs: [] },
  { type: "error", name: "TaskAlreadyCompleted", inputs: [] },
  { type: "error", name: "TaskCreationWithZeroWeight", inputs: [] },
  { type: "error", name: "TaskDoesNotExist", inputs: [] },
  { type: "error", name: "UserAlreadyHasKyc", inputs: [] },
] as const;
